#!/bin/bash
git_prompt() {
    GIT_BRANCH_FONT=`echo -e "\e[0m"`
    GIT_BRANCH=""
    GIT_AHEAD_FONT=`echo -e "\e[0m"`
    GIT_AHEAD=""
    GIT_BEHIND_FONT=`echo -e "\e[0m"`
    GIT_BEHIND=""
    GIT_START=""
    GIT_END=""
    #plain=""

    git_status_output=$(git status -s 2> /dev/null) || return 1
    git_branch_output=$(git branch -vv 2> /dev/null | grep -e '^\*') || return 1

    GIT_START="❮"
    GIT_END="❯"
    GIT_BRANCH='↳'`echo "$git_branch_output" | awk '{print $2}' | sed 's#(no#DETACHED#'`
    if [[ `expr length $GIT_BRANCH` -gt 11 ]]
    then
        GIT_BRANCH="${GIT_BRANCH:0:5}..${GIT_BRANCH: -3}"
    fi

    local tracking=""
    GIT_AHEAD=""
    GIT_BEHIND=""
    if [[ "$git_branch_output" =~ .*\[(.*/[^:]*)[]:].* ]]
    then
        tracking="${BASH_REMATCH[1]}"
        if [[ "$git_branch_output" =~ .*\ \[.*/.*:.*\ ahead\ ([0-9]*).*\].* ]]
        then
            GIT_AHEAD="+${BASH_REMATCH[1]}"
        fi
        if [[ "$git_branch_output" =~ .*\ \[.*/.*:.*\ behind\ ([0-9]*).*\].* ]]
        then
            GIT_BEHIND="-${BASH_REMATCH[1]}"
        fi
    fi

    local staged=`echo "$git_status_output" | grep -e "^[MARC]. .*" | wc -l`
    local changed=`echo "$git_status_output" | grep -e "^.[MD] .*" | wc -l`
    local untracked=`echo "$git_status_output" | grep -e "^?? .*" | wc -l`

    local red='\e[31m'
    local green='\e[32m'
    local yellow='\e[33m'
    local orange='\e[38;5;202m'
    local plain='\e[0m'
    local bold='\e[1m'
    local dim='\e[2m'
    local underline='\e[4m'
    local invert='\e[7m'

    GIT_BRANCH_FONT=$plain$green
    if [[ $staged -gt 0 && $changed -gt 0 ]]
    then
            GIT_BRANCH_FONT=$plain$orange
    else
        if [[ $staged -gt 0 ]]
        then
            GIT_BRANCH_FONT=$plain$yellow
        fi
        if [[ $changed -gt 0 ]]
        then
            GIT_BRANCH_FONT=$plain$red
        fi
    fi
    if [[ $tracking == "" ]]
    then
        GIT_BRANCH_FONT=${GIT_BRANCH_FONT}$invert$bold
    fi
    if [[ $untracked -gt 0 ]]
    then
        GIT_BRANCH_FONT=${GIT_BRANCH_FONT}$underline
    fi
    GIT_AHEAD_FONT=$bold$invert$green
    GIT_BEHIND_FONT=$bold$invert$red

    GIT_BRANCH_FONT=`echo -e "$GIT_BRANCH_FONT"`
    GIT_AHEAD_FONT=`echo -e "$GIT_AHEAD_FONT"`
    GIT_BEHIND_FONT=`echo -e "$GIT_BEHIND_FONT"`
    #plain=`echo -e "$plain"`
}

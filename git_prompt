#!/bin/bash
git_prompt() {
    git_status_output=$(git status 2> /dev/null) || return

    branch_name() {
        sed -n 's/# On branch //p' <<< "$git_status_output"
    }

    short_branch_name() {
        name=$(branch_name)
        if [[ `expr length $name` -gt 8 ]]
        then
            name="${name:0:6}.."
        fi
        echo -e "$name"
    }

    number_of_commits() {
        local branch_prefix='# Your branch is '
        local branch_suffix='by [[:digit:]]+'
        if [[ "$git_status_output" =~ ${branch_prefix}"$1".*${branch_suffix} ]]
        then
            echo ${BASH_REMATCH[0]//[^0-9]/}
        else
            echo 0 && return 1
        fi
    }

    match_against_status() {
        local pattern="$1"
        [[ "$git_status_output" =~ ${pattern} ]]
    }

    working_dir_clean() {
        match_against_status '(working directory clean)'
    }

    local_changes() {
        local added='# Changes to be committed'
        local not_added='# Changes not staged for commit'
        match_against_status "($added|$not_added)"
    }

    untracked_files() {
        match_against_status '# Untracked files'
    }

    local red="\033[31m"
    local green="\033[32m"
    local yellow="\033[33m"
    local no_colour="\033[0m"

    branch_part() {
        local branch_colour=""

        if untracked_files
        then
            branch_colour=$red
        elif local_changes
        then
            branch_colour=$yellow
        elif working_dir_clean
        then
            branch_colour=$green
        fi
        echo "$branch_colour$(short_branch_name)$no_colour"
    }

    local behind=$(number_of_commits "behind")
    local ahead=$(number_of_commits "ahead")

    prompt="($(branch_part)"
    if [[ "$ahead" == "0" && "$behind" == "0" ]]
    then
        prompt=$prompt')'
    else
        if [[ ! "$behind" == "0" ]]
        then
            prompt=$prompt"<$red$behind$no_colour"
        fi
        if [[ ! "$ahead" == "0" ]]
        then
            prompt=$prompt">$green$ahead$no_colour"
        fi
        prompt=$prompt')'
    fi

    echo -e "$prompt"
}
